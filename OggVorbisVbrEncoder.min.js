var LibVorbis;(function(LibVorbis){var OggVorbisVbrEncoder=function(){function OggVorbisVbrEncoder(module,options){this.module=module;this.handle=this.module.create(options.channels,options.sampleRate,options.quality);this.chunks=[];this.onData=options.onData||function(){};this.module.writeHeaders(this.handle)}OggVorbisVbrEncoder.create=function(moduleOptions,encoderOptions,callback){LibVorbisNative.makeRawNativeModule(moduleOptions,function(rawModule){var module=LibVorbis.NativeOggVorbisVbrEncoder.fromRawNativeModule(rawModule);var encoder=new OggVorbisVbrEncoder(module,encoderOptions);callback(encoder)})};OggVorbisVbrEncoder.prototype.encode=function(channelData,samples){this.module.prepareAnalysisBuffers(this.handle,samples);for(var ch=0;ch<channelData.length;++ch){var data=channelData[ch];var bufferPtr=this.module.getAnalysisBuffer(this.handle,ch);this.module.rawModule.HEAPF32.set(data,bufferPtr>>2)}this.module.encode(this.handle);this.flush()};OggVorbisVbrEncoder.prototype.finish=function(){this.module.finish(this.handle);this.flush();this.module.destroy(this.handle);this.module=null;return new Blob(this.chunks,{type:"audio/ogg"})};OggVorbisVbrEncoder.prototype.flush=function(){var dataPointer=this.module.getData(this.handle);var dataLength=this.module.getDataLength(this.handle);if(dataLength===0)return;var chunk=this.module.rawModule.HEAPU8.subarray(dataPointer,dataPointer+dataLength);var data=new Uint8Array(chunk);var buffer=data.buffer;this.module.clearData(this.handle);this.chunks.push(buffer);this.onData(buffer)};return OggVorbisVbrEncoder}();LibVorbis.OggVorbisVbrEncoder=OggVorbisVbrEncoder})(LibVorbis||(LibVorbis={}));
